#diny.py

import threading
import random
import time
from pymongo import MongoClient

class Philosopher(threading.Thread):

    running = True
    # URI = 'mongodb://username:password@ipaddress:27017/userdb'
    connection = MongoClient("127.0.0.1",27017)
    printcounter=0
    @staticmethod
    def readFromMongo(self,index):
        print "Reading raw data...."
        db = Philosopher.connection.test.diniraw
        limit=self.printcounter
        cursor = db.find({"ph_no": index})[limit:limit+1]
        print cursor[0]
        self.printcounter+=1 #print next record
        self.printcounter%=9 #number of records per philo

    def __init__(self, i, xname, forkOnLeft, forkOnRight):
        threading.Thread.__init__(self)
        self.name = xname
        self.index=i
        self.forkOnLeft = forkOnLeft
        self.forkOnRight = forkOnRight

    def run(self):
        while(self.running):
            #  Philosopher is thinking (but really is sleeping).
            time.sleep( random.uniform(3,13))
            print '%s is hungry.' % self.name
            self.dine()

    def dine(self):
        fork1, fork2 = self.forkOnLeft, self.forkOnRight

        while self.running:
            fork1.acquire(True)
            locked = fork2.acquire(False)
            if locked: break
            fork1.release()
        #    print '%s swaps forks' % self.name
            #fork1, fork2 = fork2, fork1
        else:
            return


        self.dining()
        fork2.release()
        fork1.release()

    def dining(self):
        print '%s starts eating '% self.name
        Philosopher.readFromMongo(self,self.index)
        time.sleep(random.uniform(1,10))
        print '%s finishes eating and leaves to think.' % self.name

def DiningPhilosophers():
    forks = [threading.Lock() for n in range(5)]
    philosopherNames = ('Aristotle','Kant','Buddha','Marx', 'Russel')

    philosophers= [Philosopher(i, philosopherNames[i], forks[i%5], forks[(i+1)%5]) for i in range(5)]

    random.seed(507129)
    Philosopher.running = True
    for p in philosophers: p.start()
    time.sleep(100)
    Philosopher.running = False
    print ("Now we're finishing.")

DiningPhilosophers()





#loadRawData.py

from pymongo import MongoClient
from datetime import datetime
def getDataFromFile(fname):
    # connect to the MongoDB on MongoLab
    # to learn more about MongoLab visit http://www.mongolab.com
    # replace the "" in the line below with your MongoLab connection string
    # you can also use a local MongoDB instance
    connection = MongoClient("127.0.0.1",27017)

    # connect to the students database and the ctec121 collection
    db = connection.test.diniraw
    
    fd=open(fname,'r').read().strip().split("\n")
    for line in fd:
        record=line.strip().split(",")
        print record
        record=[int(e) for e in record]
        post={"ph_no":record[0],"time":str(datetime.now()),"temp":record[1]}
        db.insert(post)
        
getDataFromFile('myrawdata.txt')

0,43
1,34
2,22
3,54
4,78
0,431
1,341
2,221
3,541
4,781
0,432
1,342
2,222
3,542
4,782
0,433
1,343
2,223
3,543
4,783
0,434
1,344
2,224
3,544
4,784
0,435
1,345
2,225
3,545
4,785
0,436
1,346
2,226
3,546
4,786
0,437
1,347
2,227
3,547
4,787
0,438
1,348
2,228
3,548
4,788
0,439
1,349
2,229
3,549
4,789
